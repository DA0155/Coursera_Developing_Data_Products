houseprices2.boot <- boot(houseprices, R=R, statistic=houseprices2.fn)
house.fac <- factor(rep(1:n, rep(R, n)))
plot(house.fac, as.vector(houseprices2.boot$t), ylab="Prediction Errors",
xlab="House")
pause()
plot(apply(houseprices2.boot$t,2, sd)/predict.lm(houseprices.lm, se.fit=TRUE)$se.fit,
ylab="Ratio of Bootstrap SE's to Model-Based SE's", xlab="House", pch=16)
abline(1,0)
summary(houseprices.lm)$sigma^2
CVlm()
hist(houseprices)
str(houseprices)
hist(houseprices$sale.price)
boxplot(houseprices$sale.price)
df_hawker = load.tabe("D:/Users/David/Documents/R/House_Prices/AllHomes_2614.txt")
df_hawker = load.table("D:/Users/David/Documents/R/House_Prices/AllHomes_2614.txt")
df_hawker = table.load("D:/Users/David/Documents/R/House_Prices/AllHomes_2614.txt")
df_hawker = read.table("AllHomes_2614.txt", sep="\t", header = TRUE,  na.strings = "-")
df_hawker
df_hawker(,Cont.Date)
df_hawker[],Cont.Date]
df_hawker[,Cont.Date]
df_hawker.labels
df_hawker[1,2]
df_hawker[,1]
df_hawker[1,]
labels(df_hawker)
df_hawker[Cont.Date,]
df_hawker["Cont.Date",]
View(df_hawker)
df_hawker[2,2]
df_hawker[2,]
df_hawker$Cont.Date
df_hawker$Cont.Date <- as.Date(df_hawker$Cont.Date , "%d/%m/%y")
df_hawker$Trans.Date <- as.Date(df_hawker$Trans.Date , "%d/%m/%y")
df_hawker$Ad.Date <- as.Date(df_hawker$Ad.Date , "%d/%m/%y")
View(df_hawker)
df_hawker[ df_hawker == "-" ] = NA
df_hawker[ df_hawker == "�" ] = NA
df_hawker[588,4]
df_hawker[1,1]
df_hawker[588,1]
df_hawker[588,2]
df_hawker[588,3]
dim(df_hawker)
df_hawker[588,4]
df_hawker[588,5]
hist(df_hawker$Price)
df_hawker[ df_hawker == "–" ] = NA
df_hawker$Price <- as.Numeric(df_hawker$Price)
df_hawker$Price <- as.numeric(as.character(df_hawker$Price))
View(df_hawker)
df_hawker$Block.Size.m2 <- as.numeric(as.character(df_hawker$Block.Size.m2))
View(df_hawker)
df_hawker$Purpose <- as.character(df_hawker$Purpose)
df_hawker$Bed.Num <- as.numeric(as.character(df_hawker$Bed.Num))
df_hawker$Bath.Num <- as.numeric(as.character(df_hawker$Bath.Num))
df_hawker$Ens.Num <- as.numeric(as.character(df_hawker$Ens.Num))
df_hawker$Car.Num <- as.character(df_hawker$Car.Num)
View(df_hawker)
df_hawker$Purpose[2]
df_hawker$Purpose[2] = NA
View(df_hawker)
df_hawker$Purpose[4]
character(df_hawker$Purpose[4])
as.Date("2014-02-15", "%d%B%Y")
as.Date("2014-02-15", "%y%m%d")
as.Date("2014-02-15", "%Y%m%d")
as.Date("2014-02-15", "Y-m-d")
ndt <-  as.Date("2014-02-15", "%Y-%m-%d")
ndt <-  as.Date("2014-02-15", "%y-%m-%d")
ndt <-  as.Date("2014-02-15", "%Y-%m-%d")
df_hawker = read.table("AllHomes_2614.txt", sep="\t", header = TRUE,  na.strings = "-")
View(df_hawker)
dt <- as.Date(df_hawker$Ad.Date[1] , "%d/%m/%Y")
df_hawker$Ad.Date <- as.Date(df_hawker$Ad.Date , "%d/%m/%Y")
df_hawker$Trans.Date <- as.Date(df_hawker$Trans.Date , "%d/%m/%Y")
df_hawker$Cont.Date <- as.Date(df_hawker$Cont.Date , "%d/%m/%Y")
View(df_hawker)
df_hawker$Price <- as.numeric(as.character(df_hawker$Price))
df_hawker$Block.Size.m2 <- as.numeric(as.character(df_hawker$Block.Size.m2))
df_hawker$Bed.Num <- as.numeric(as.character(df_hawker$Bed.Num))
df_hawker$Bath.Num <- as.numeric(as.character(df_hawker$Bath.Num))
df_hawker$Ens.Num <- as.numeric(as.character(df_hawker$Ens.Num))
df_hawker$Car.Num <- as.character(df_hawker$Car.Num)
View(df_hawker)
hist(df_hawker$Price)
summary(df_hawker$Price)
hist(df_hawker$Block.Size.m2)
hist(df_hawker$Block.Size.m2 <= 5000)
hist(df_hawker$Block.Size.m2[ <= 5000])
hist(subset(df_hawker$Block.Size.m2 <= 5000])
hist(subset(df_hawker$Block.Size.m2 <= 5000]))
hist(subset(df_hawker$Block.Size.m2 <= 5000))
subset(df_hawker, Block.Size.m2 <= 5000)
hist(subset(df_hawker, Block.Size.m2 <= 5000)$Block.Size.m2)
summary(subset(df_hawker, Block.Size.m2 <= 5000)$Block.Size.m2)
plot(df_hawker$Block.Size.m2, df_hawker$Price)
plot(df_hawker$Block.Size.m2, df_hawker$Bed.Num)
plot(df_hawker$Bed.Num, df_hawker$Price)
boxplot(df_hawker$Bed.Num, df_hawker$Price)
boxplot(df_hawker$Price)
boxplot(Bed.Num~Price, data = df_hawker)
boxplot(Price~Bed.Num, data = df_hawker)
rm(lm=list())
?rm
rm(list=ls())
View(df_hawker)
rm(list=ls())
?read
??read
??csv
df.house <- read.csv("D:/Users/David/Documents/R/House_Prices/AllHomes_2614.txt", header = TRUE, sep=",", na.strings = "NA")
View(df.house)
rm(list=ls())
df.house <- read.delim("D:/Users/David/Documents/R/House_Prices/AllHomes_2614.txt", header = TRUE, sep="\t", na.strings = "NA")
View(df.house)
?cbind
?gsub
grep("[a-zA-Z]", df.house$Address)
?gsub
gsub([0-9,*], "", df.house$Address)
gsub([0-9], "", df.house$Address)
gsub("[0-9]", "", df.house$Address)
gsub("[0-9,/,*]", "", df.house$Address)
??trim
trim(gsub("[0-9,/,*]", "", df.house$Address))
library(stringr)
trim(gsub("[0-9,/,*]", "", df.house$Address))
str_trim(gsub("[0-9,/,*]", "", df.house$Address))
df.house$Address <- str_trim(gsub("[0-9,/,*]", "", df.house$Address))
View(df.house)
hist(df.house$Price)
plot(Price ~ Block.Size.m2, data = df.house)
plot(Price ~ ., data = df.house)
plot(Price ~ Bed.Num, data = df.house)
fit <- lm(Price ~ Bed.Num, data = df.house)
fit
abline(fit)
predict(fit,4)
?predict
predict(fit, data.frame(test_x = c(1, 2, 3)))
predict(fit, data.frame(Bed.Num = c(1, 2, 3)))
plot(fit$residuals)
plot(fit)
data(cars)
str(cars)
View(cars)
data(mtcars)
str(mtcars)
View(mtcars)
ls()
ls("cars")
ls(cars)
rm(list=ls(cars))
View(cars)
rm(cars)
rm(mtcars)
as.Date(df.house$Contract.Date, "%D/%m/%Y")
as.Date(df.house$Contract.Date, "%DD/%mm/%YYYY")
as.Date(df.house$Contract.Date, "%d/%m/%Y")
df.house$Contract.Date <- as.Date(df.house$Contract.Date, "%d/%m/%Y")
df.house$Transaction.Date <- as.Date(df.house$Transaction.Date, "%d/%m/%Y")
View(df.house)
df.house$Advertise.Date <- as.Date(df.house$Advertise.Date, "%d/%m/%Y")
as.factor(df.house$Address)
df.house$Address <- as.factor(df.house$Address)
library("rattle")
rattle
rattle()
plot(Price ~ Contract.Date, data = df.house)
plot(Price ~ Contract.Date, data = df.house)
plot(Price ~ Contract.Date + Bed.Num, data = df.house)
?lm
boxplot(df.house$Price)
boxplot(Bed.Num~Price, data = df.house)
boxplot(Price ~ Bed.Num, data = df.house)
Price.lm <- lm(Price ~ Bed.Num, data = df.house)
abline(Price.lm)
coplot(Price ~ Bath.Num|Bed.Num, data=df.house)
CVlm()
boxplot(Price ~ Bath.Num, data = df.house)
boxplot(Price ~ Garage.Num, data = df.house)
boxplot(Price ~ Ensuite.Num, data = df.house)
boxplot(Price ~ Carport.Num, data = df.house)
shiny::runApp()
?read
??csv
shiny::runApp()
title: "Untitled"
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
author("mydeck")
require(devtools)
author("mydeck")
library(slidify)
author("mydeck")
slidify("index.Rmd")
shiny::runApp('D:/Users/David/Documents/R/House_Prices')
shiny::runApp('D:/Users/David/Documents/R/House_Prices')
library(rCharts)
library(ggvis)
require(ggvis)
install.packages("ggvis")
library(ggvis)
library(data.table)
library(reshape2)
library(dplyr)
library(markdown)
library(mapproj)
install.packages("mapproj")
install.packages("maps")
states_map <- map_data("state")
View(states_map)
shiny::runApp('D:/Users/David/Documents/R/House_Prices')
shiny::runApp('D:/Users/David/Documents/R/House_Prices')
?mutate
??mutate
dt <- fread('AllHomes_2614.txt')
??csv
dt <- read.delim('AllHomes_2614.txt', header = TRUE, sep = "\t")
detach(dt)
rm(dt)
shiny::runApp()
rm(df.house)
rm(states_map)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?names
dataset <- read.delim("AllHomes_2614.txt", header = TRUE, sep = "\t")
names(dataset)[[2]]
shiny::runApp()
shiny::runApp()
shiny::runApp()
?sliderInput
names(dataset)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dataset[sample(nrow(dataset), input$sampleSize),]
shiny::runApp()
names(dataset)
c("Price")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dataset()
shiny::runApp()
ggplot
?ggplot
names(datset)
names(dataset)
shiny::runApp()
nrow(dataset)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rm(dataset)
shiny::runApp()
?names
shiny::runApp()
shiny::runApp()
predict
?predict
install.packages("DAAG")
library("DAAG")
shiny::runApp()
plot(sale.price~area, data=houseprices)
coplot(sale.price~area|bedrooms, data=houseprices)
houseprices.lm <- lm(sale.price ~ area, data=houseprices)
summary(houseprices.lm)$sigma^2
CVlm()
require(boot)
dt <- houseprices
rm(dt)
rm(list=ls())
df.house <- read.delim("data/AllHomes_2614.txt", header = TRUE, sep="\t", na.strings = "NA")
View(df.house)
df.house$Address <- str_trim(gsub("[0-9,/,*]", "", df.house$Address))
df.house$Address <- str_trim(gsub("[0-9,/,*]", "", df.house$Address))
library(stringr)
df.house$Address <- str_trim(gsub("[0-9,/,*]", "", df.house$Address))
View(df.house)
df.house$Street.Type <- "NA"
View(df.house)
df.house$Contract.Year <- "NA"
df_hawker$Cont.Date <- as.Date(df_hawker$Cont.Date , "%d/%m/%y")
df_hawker$Trans.Date <- as.Date(df_hawker$Trans.Date , "%d/%m/%y")
df_hawker$Ad.Date <- as.Date(df_hawker$Ad.Date , "%d/%m/%y")
df.house$Contract.Date <- as.Date(df.house$Contract.Date , "%d/%m/%y")
df.house$Transaction.Date <- as.Date(df.house$Transaction.Date , "%d/%m/%y")
df.house$Advertise.Date <- as.Date(df.house$Advertise.Date , "%d/%m/%y")
View(df.house)
levels(df.house)
levels(df.house$Transaction.Type)
levels(df.house$Purpose)
?grep
grep("Street", df.house$Address)
grep(^[Street], df.house$Address)
grep("^[Street]", df.house$Address)
grep("[Street]", df.house$Address)
grep("[\\bStreet\\b]", df.house$Address)
grep("[\bStreet\b]", df.house$Address)
grep("^[\bStreet\b]", df.house$Address)
View(df.house)
View(df.house)
as.factor(df.house$Contract.Date, "%Y"))
as.factor(df.house$Contract.Date, "%Y")
format(df.house$Contract.Date, "%Y")
df.house <- read.delim("data/AllHomes_2614.txt", header = TRUE, sep="\t", na.strings = "NA")
View(df.house)
df.house$Address <- str_trim(gsub("[0-9,/,*]", "", df.house$Address))
View(df.house)
df.house$Contract.Date <- as.Date(df.house$Contract.Date , "%D/%M/%Y")
View(df.house)
df.house <- read.delim("data/AllHomes_2614.txt", header = TRUE, sep="\t", na.strings = "NA")
# remove non alpha numerics from street
df.house$Address <- str_trim(gsub("[0-9,/,*]", "", df.house$Address))
as.Date(df.house$Contract.Date , "%d/%m/%Y")
View(df.house)
df.house$Contract.Date <- as.Date(df.house$Contract.Date , "%d/%m/%Y")
df.house$Transaction.Date <- as.Date(df.house$Transaction.Date , "%d/%m/%Y")
df.house$Advertise.Date <- as.Date(df.house$Advertise.Date , "%d/%m/%Y")
View(df.house)
format(df.house$Contract.Date, "%Y")
as.factor(format(df.house$Contract.Date, "%Y"))
df.house$Contract.Year <- as.factor(format(df.house$Contract.Date, "%Y"))
View(df.house)
grep("Street",df.house$Address)
df.house$Street.Type <- "NA"
df.house$Street.Type[grep("Street",df.house$Address)] <- "Street"
View(df.house)
df.house$Street.Type[grep("Close",df.house$Address)] <- "Close"
df.house$Street.Type[grep("Drive",df.house$Address)] <- "Drive"
View(df.house)
df.house$Street.Type[grep("Place",df.house$Address)] <- "Place"
df.house$Street.Type[grep("Circuit",df.house$Address)] <- "Circuit"
View(df.house)
df.house$Street.Type[grep("Pl",df.house$Address)] <- "Place"
as.factor(df.house$Street.Type)
df.house.Address[is.NA(df.house$Street.Type)]
df.house$Address[is.NA(df.house$Street.Type)]
df.house$Address[isNA(df.house$Street.Type)]
?Is.NA
??Is.NA
df.house$Address[is.na(df.house$Street.Type)]
is.na(df.house$Street.Type)
is.na(df.house$Street.Type == True)
is.na(df.house$Street.Type == TRUE)
View(df.house)
df.house$Street.Type[grep("St",df.house$Address)] <- "Street"
df.house$Street.Type[grep("Cct",df.house$Address)] <- "Circuit"
str_trim(gsub("D ", "", df.house$Address))
View(df.house)
df.house$Street.Name <- "NA"
df.house$Street.Type <- as.factor(df.house$Street.Type)
str_trim(levels(df.house$Street.Type), "", df.house$Address))
str_trim(levels(df.house$Street.Type), "", df.house$Address)
levels(df.house$Street.Type)
str_trim(gsub(levels(df.house$Street.Type), "", df.house$Address))
View(df.house)
?write
View(df.house)
write.csv(df.house, file = "HousePricesHawker.csv")
df.house <- read.csv("data/HousePricesHawker.csv", header = TRUE, na.strings = "NA")
View(df.house)
df.house$Contract.Date <- as.Date(df.house$Contract.Date , "%d/%m/%Y")
df.house$Transaction.Date <- as.Date(df.house$Transaction.Date , "%d/%m/%Y")
df.house$Advertise.Date <- as.Date(df.house$Advertise.Date , "%d/%m/%Y")
df.house$Contract.Year <- as.factor(format(df.house$Contract.Date, "%Y"))
boxplot(Price ~ Bed.Num, data = df.house)
one_model <- lm(Price ~ ., data = df.house)
one_model <- lm(Price ~ Block.Size.m2 + Bed.Num + Bath.Num + Ensuite.Num + Garage.Num + Carport.Num + Contract.Year + Street.Type + Street.Name, data = df.house)
find.model <- step(one_model, direction = "both")
one_model <- lm(Price ~ Block.Size.m2 + Bed.Num + Bath.Num + Ensuite.Num + Garage.Num + Carport.Num + Contract.Year, data = df.house)
find.model <- step(one_model, direction = "both")
one_model <- lm(Price ~ ., data = df.house, na.action = na.omit)
one_model <- lm(Price ~ Block.Size.m2 + Bed.Num + Bath.Num + Ensuite.Num + Garage.Num + Carport.Num + Contract.Year, data = df.house, na.action = na.omit)
find.model <- step(one_model, direction = "both")
find.model <- step(one_model, direction = "both", na.action = na.omit
)
---
;
title       : Predicting House Prices
shiny::runApp()
?lm
one_model <- lm(Price ~ Bed.Num + Bath.Num + Ensuite.Num + Garage.Num
+ Carport.Num, data = df.house, na.action = na.omit)
?predict
predict(one_model, c(3,1,1,1,2))
predict(one_model, newdata = NULL)
one_model <- lm(Price ~ Bed.Num, data = df.house, na.action = na.omit)
predict(one_model, c(1))
predict(one_model, data.frame(Bed.Num = c(1,2,3))
;
predict(one_model, data.frame(Bed.Num = c(1,2,3)))
one_model <- lm(Price ~ Bed.Num + Garage.Num, data = df.house, na.action = na.omit)
predict(one_model, data.frame(Bed.Num = c(4), Garage.Num = c(2)))
predict(one_model, data.frame(Bed.Num = c(4), Garage.Num = c(0)))
predict(one_model, data.frame(Bed.Num = c(4), Garage.Num = c(89)))
predict(one_model, data.frame(Bed.Num = c(4), Garage.Num = c(2)))
predict(one_model, data.frame(Bed.Num = c(3), Garage.Num = c(2)))
par(mfrow=c(2,3))
termplot(one_model)
plot(one_model)
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(df.house)
levels(df.house$Purpose)
subset(df.house, grepl("Residential", df.house$Purpose))
subset(df.house, grep("Residential", df.house$Purpose))
df.residential <- subset(df.house, grepl("Residential", df.house$Purpose))
df.residential <- subset(df.house, grepl("*Residential*", df.house$Purpose))
?grepl
df.residential <- subset(df.house, grepl("*Residential*", df.house$Purpose, ignore.case = TRUE))
shiny::runApp()
View(df.house)
?selectInput
??selectInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dataset <- read.csv("data/HousePricesHawker.csv", header = TRUE, na.strings = "NA")
dataset <- subset(dataset, grepl("*Residential*", dataset$Purpose, ignore.case = TRUE))
dataset$Contract.Date <- as.Date(df.house$Contract.Date , "%d/%m/%Y")
dataset$Transaction.Date <- as.Date(df.house$Transaction.Date , "%d/%m/%Y")
dataset$Advertise.Date <- as.Date(df.house$Advertise.Date , "%d/%m/%Y")
df.house$Contract.Year <- as.factor(format(df.house$Contract.Date, "%Y"))
dataset$Contract.Date <- as.Date(dataset$Contract.Date , "%d/%m/%Y")
dataset$Transaction.Date <- as.Date(dataset$Transaction.Date , "%d/%m/%Y")
dataset$Advertise.Date <- as.Date(dataset$Advertise.Date , "%d/%m/%Y")
dataset$Contract.Year <- as.factor(format(dataset$Contract.Date, "%Y"))
model <- lm(Price ~ Bed.Num + Block.Size.m2, data = df.house)
model
model$coefficients
model$terms
shiny::runApp()
predict(model, data.frame(Bed.Num = c(3), Block.Size.m2 = c(600)))
shiny::runApp()
shiny::runApp()
as.numeric("2")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?predict
shiny::runApp()
shiny::runApp()
shiny::runApp()
predict(one_model, data.frame(Bed.Num = c(4), Garage.Num = c(2)))
p <- predict(one_model, data.frame(Bed.Num = c(4), Garage.Num = c(2)))
p
table(p)
view(p)
View(p)
shiny::runApp()
table(p)
table(p)[1]
table(p)[2]
table(p)[,1]
dim(p)
shiny::runApp()
### Welcome to the house price Toolbox
shiny::runApp()
# Load data
dataset <- read.csv("data/HousePricesHawker.csv", header = TRUE, na.strings = "NA")
dataset <- subset(dataset, grepl("*Residential*", dataset$Purpose, ignore.case = TRUE))
# Data Conversions
dataset$Contract.Date <- as.Date(dataset$Contract.Date , "%d/%m/%Y")
dataset$Transaction.Date <- as.Date(dataset$Transaction.Date , "%d/%m/%Y")
dataset$Advertise.Date <- as.Date(dataset$Advertise.Date , "%d/%m/%Y")
dataset$Contract.Year <- as.factor(format(dataset$Contract.Date, "%Y"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
one_model <- lm(Price ~ Bed.Num + Block.Size.m2 + Contract.Year, data = df.house, na.action = na.omit)
predict(one_model, data.frame(Bed.Num = c(4), Block.Size.m2 = c(400), COntract.Year = c("2013")))
predict(one_model, data.frame(Bed.Num = c(4), Block.Size.m2 = c(400), Contract.Year = c("2013")))
shiny::runApp()
shiny::runApp()
shiny::runApp()
rm(list=ls())
shiny::runApp()
shiny::runApp()
